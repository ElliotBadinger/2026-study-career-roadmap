---
interface Props {
  href?: string;
  type?: "button" | "submit" | "reset";
  variant?: "primary" | "secondary" | "ghost";
  size?: "sm" | "md" | "lg";
  full?: boolean;
  class?: string;
}
const {
  href,
  type = "button",
  variant = "primary",
  size = "md",
  full = false,
  class: className = "",
} = Astro.props as Props;

const base =
  "inline-flex items-center justify-center rounded-lg font-medium transition-all duration-200 focus-visible:outline-none focus-visible:shadow-focus-glow disabled:opacity-60 disabled:pointer-events-none";

const variants = {
  primary: "bg-primary text-white hover:bg-blue-600",
  secondary: "bg-secondary text-white hover:bg-emerald-600",
  ghost: "bg-transparent text-text-light-primary border border-border-light hover:bg-bg-light-secondary dark:text-text-dark-primary dark:border-border-dark dark:hover:bg-bg-dark-surface",
} as const;

const sizes = {
  sm: "text-sm px-3 py-2",
  md: "text-sm px-4 py-2.5",
  lg: "text-base px-5 py-3",
} as const;

const classes = `${base} ${variants[variant]} ${sizes[size]} ${full ? "w-full" : ""} ${className}`;
---

{href ? (
  <a href={href} class={classes}>
    <slot />
  </a>
) : (
  <button type={type} class={classes}>
    <slot />
  </button>
)}
